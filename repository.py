import streamlit as st
import gspread
import pandas as pd
import re
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo
import google.generativeai as genai
from typing import List, Tuple

st.title("MATRIZ DE REPORTES DSEC")

# ---------------------------
# Conexiones y configuraci√≥n
# ---------------------------
gc = gspread.service_account_from_dict(st.secrets["connections"]["gsheets"])
SHEET_ID = "1UP_fwvXam8-1IXI-oUbkNqGzb0_T0XNrYsU7ziJVAqE"  # ideal: mover a secrets
sh = gc.open_by_key(SHEET_ID)
ws = sh.worksheet("Reportes")

api_key = st.secrets["GOOGLE_API_KEY"]
genai.configure(api_key=api_key)
model = genai.GenerativeModel("gemini-1.5-flash")

TZ = ZoneInfo("America/La_Paz")

st.markdown("""
### üìù Instrucciones para registrar un incidente

Por favor, describe el incidente en **un solo p√°rrafo** incluyendo estos campos **obligatorios**:

1. **Fecha y hora de apertura** ‚Äî la hora de inicio del incidente/alerta con hora y AM/PM.  
2. **Sistema afectado** ‚Äî por ejemplo: Correo, VPN, Active Directory, Firewall, etc.  
3. **√Årea afectada** ‚Äî el departamento o unidad donde se detect√≥ el problema.  
4. **Acci√≥n inmediata tomada** ‚Äî lo que hizo el usuario para mitigar el problema.  
5. **Soluci√≥n aplicada** ‚Äî acci√≥n final que resolvi√≥ el incidente.  
6. **√Årea de GTIC que coordin√≥** ‚Äî Infrestructura, Seguridad, Soporte T√©cnico, etc.  
7. **Fecha y hora de cierre** ‚Äî cuando se resolvi√≥ el incidente.

`
""")
# ---------------------------
# Gu√≠as (texto de referencia)
# ---------------------------
guia_vuln = """  
1.1 - Ausencia o carencia de personal id√≥neo.
1.2 - Ausencia o carencia de conocimientos y habilidades en inform√°tica.
1.3 - Desconocimiento de pol√≠ticas, normas, o procedimientos de Seguridad de la Informaci√≥n.
1.4 - Falta de conciencia en el reporte de incidentes de Seguridad de la Informaci√≥n.
1.5 - Ausencia o carencia de conocimiento para el manejo de herramientas de seguridad inform√°tica.
1.6 - Falta de conciencia en Seguridad de la Informaci√≥n.
1.7 - Desconocimiento de las pol√≠ticas para el buen uso de los activos de informaci√≥n (Red, Correo, Internet, Sistemas de Informaci√≥n, Chat, Redes Sociales, etc.).
1.8 - Desconocimiento del marco legal y regulatorio de seguridad de la informaci√≥n.
1.9 - Desconocimiento de los controles de seguridad inform√°tica aplicados a los activos de informaci√≥n que son de su responsabilidad.
1.10 - Desconocimiento del marco legal y regulatorio de la protecci√≥n de los datos personales.
1.11 - Falta de conciencia en Protecci√≥n de Datos Personales
1.12 - Desconocimiento de pol√≠ticas, normas, o procedimientos para el tratamiento de los datos personales.
1.13 - Sobrecarga en la asignaci√≥n de funciones.
1.14 - Ausencia de personal de respaldo para los cargos cr√≠ticos
1.15 - Capacidad reducida del proceso en cuanto a recursos humanos

2.1 - Ausencia de segregaci√≥n de funciones o separaci√≥n de deberes.
2.2 - Ausencia de lineamientos para la divulgaci√≥n de informaci√≥n al p√∫blico.
2.3 - Ausencia de procedimientos para la clasificaci√≥n, etiquetado y manejo de la informaci√≥n.
2.4 - Ausencia de lineamientos de seguridad de la informaci√≥n en todo el ciclo de la relaci√≥n con los proveedores.
2.5 - Ausencia de lineamientos de seguridad de la informaci√≥n para antes de asumir el empleo, durante la ejecuci√≥n del empleo y para la terminaci√≥n y cambio del empleo.
2.6 - Ausencia de pruebas de vulnerabilidades t√©cnicas de forma regular.
2.7 - Ausencia de medidas apropiadas para corregir las vulnerabilidades t√©cnicas. 
2.8 - Ausencia de registros sobre las actividades del usuario, excepciones, fallas y eventos.
2.9 - Falta de revisi√≥n peri√≥dica de los registros de eventos de auditor√≠a.
2.10 - Falta de documentaci√≥n t√©cnica sobre los componentes tecnol√≥gicos.
2.11 - Falta de integrar la seguridad de la informaci√≥n en todas las fases de la gesti√≥n del proyecto.
2.12 - Ausencia de lineamientos para el tratamiento de los datos personales. 
2.13 - Falta definici√≥n de requisitos contractuales para la transmisi√≥n o transferencia de datos personales. 
2.14 - Ausencia de procedimientos claros y de herramientas adecuadas para garantizar la eliminaci√≥n segura de la informaci√≥n o datos personales cuando ya no se requieran.
2.15 - Carencia de procedimientos y herramientas para la atenci√≥n de consultas, reclamos, peticiones de rectificaci√≥n, actualizaci√≥n y supresi√≥n de datos personales.
2.16 - Falta de la autorizaci√≥n por parte del titular para el tratamiento de los datos personales.
2.17 - Falta de contactos apropiados con las autoridades y grupos de inter√©s de seguridad de la informaci√≥n.
2.18 - Inadecuada gesti√≥n de los medios removibles.
2.19 - Falta o deficiencia de los procedimientos para el control en los cambios en instalaciones de procesamiento de informaci√≥n.
2.20 - Ausencia de procedimientos para controlar la instalaci√≥n de software.
2.21 - Falta de reglas para instalaci√≥n de software por parte de los colaboradores.
2.22 - Falta de acuerdos de confidencialidad.
2.23 - Falta de acuerdos para la transferencia de informaci√≥n.
2.24 - Inadecuada gesti√≥n de incidentes y debilidades de seguridad.
2.25 - Falta de considerar la seguridad en Planes de Continuidad.
2.26 - Falta de revisiones peri√≥dicas de cumplimiento.
2.27 - Ausencia de notificaci√≥n de cambios t√©cnicos y operativos.
2.28 - Falta de verificaci√≥n de la continuidad de seguridad.
2.29 - Ausencia de controles para restringir acceso a c√≥digos fuente.
2.30 - Ausencia de controles sobre los datos de pruebas.
2.31 - Ausencia de controles para proteger ambientes de desarrollo.
2.32 - Ausencia de controles para proteger integridad de datos en redes p√∫blicas.
2.33 - Falta de revisi√≥n de integridad en cambios.
2.34 - Falta de revisi√≥n t√©cnica tras cambios de plataforma.

3.1 - Insuficiencia o mal funcionamiento de controles de acceso f√≠sico.
3.2 - Falta de monitoreo en controles de acceso f√≠sico.
3.3 - Falta de mantenimiento a la infraestructura f√≠sica.
3.4 - Ubicaci√≥n en √°rea susceptible de inundaci√≥n.
3.5 - Ausencia de protecci√≥n contra humedad, polvo y suciedad.
3.6 - Insuficiencia de archivadores para almacenamiento.
3.7 - Ausencia de controles antis√≠smicos.
3.8 - Ausencia de controles de prevenci√≥n de incendios.
3.9 - Documentos impresos sin protecci√≥n.
3.10 - Manejo inadecuado de la informaci√≥n.
3.11 - Zona susceptible a vandalismo, protestas.
3.12 - Acceso sin control a zonas seguras.

4.1 - Gesti√≥n deficiente de contrase√±as.
4.2 - Asignaci√≥n errada de privilegios.
4.3 - Ausencia o debilidad en mecanismos de autenticaci√≥n.
4.4 - Segregaci√≥n inadecuada de funciones o roles.
4.5 - Sin revisi√≥n peri√≥dica de permisos.
4.6 - Notificaci√≥n tard√≠a de novedades de usuarios.
4.7 - Documentaci√≥n de sistemas desactualizada.
4.8 - Ausencia de protecci√≥n a datos en pruebas.
4.9 - Uso de software no conforme a requerimientos.
4.10 - Uso de software desactualizado o vulnerable.
4.11 - Falta de control en actualizaciones.
4.12 - Falta de pruebas de aceptaci√≥n en los sistemas.
4.13 - Ausencia o insuficiencia de pruebas de la funcionalidad de la seguridad de los sistemas.
4.14 - Conexiones a redes p√∫blicas sin mecanismos de protecci√≥n.
4.15 - Configuraciones por defecto.
4.16 - Los ambientes de pruebas, desarrollo y producci√≥n no se encuentran separados.
4.17 - Incapacidad del sistema para atender un alto volumen de conexiones.
4.18 - Permitir la ejecuci√≥n de sesiones simult√°neas del mismo usuario en el sistema de informaci√≥n o servicio.
4.19 - Ausencia de alertas de seguridad en los componentes tecnol√≥gicos.
4.20 - Uso de protocolos con vulnerabilidades para la protecci√≥n de la confidencialidad o integridad.
4.21 - Ausencia o deficiencia en los recursos de almacenamiento y procesamiento.
4.22 - Ausencia o deficiencia de seguimiento y monitoreo a los recursos de almacenamiento y procesamiento de informaci√≥n.
4.23 - Habilitaci√≥n de servicios de red innecesarios.
4.24 - Ausencia de documentaci√≥n de los puertos que utilizan los sistemas de informaci√≥n o servicios inform√°ticos.
4.25 - Ausencia de l√≠neas base para la instalaci√≥n de los componentes tecnol√≥gicos.
4.26 - Ausencia de control para "terminar sesi√≥n" luego de un tiempo determinado de inactividad.
4.27 - Ausencia de controles criptogr√°ficos o uso de cifrado d√©bil.
4.28 - Inadecuado uso y protecci√≥n a las llaves criptogr√°ficas durante su ciclo de vida.
4.29 - Ausencia de controles de detecci√≥n, de prevenci√≥n y de recuperaci√≥n para proteger contra c√≥digos maliciosos.
4.30 - Ausencia de copias de respaldo de la informaci√≥n, software e im√°genes de los sistemas.
4.31 - Falta de pruebas de verificaci√≥n de las copias de respaldo.
4.32 - Inadecuada protecci√≥n de la informaci√≥n de registro.
4.33 - Protecci√≥n inadecuada de la informaci√≥n en las redes de la informaci√≥n.
4.34 - Protecci√≥n inadecuada a la informaci√≥n manejada por mensajer√≠a electr√≥nica.
4.35 - Falta de integrar la seguridad de la informaci√≥n durante todo el ciclo de vida de los sistemas.
4.36 - Falta o fallas de sincronizaci√≥n de los relojes de los sistemas de procesamiento de informaci√≥n.
4.37 - Ausencia de Planes de Recuperaci√≥n de Desastres (DRP).
4.38 - Falta de pruebas de verificaci√≥n a los planes de recuperaci√≥n de desastres.
4.39 - Ausencia de sistemas redundantes (Alta Disponibilidad), que permita dar una respuesta m√°s r√°pida en eventos de falla.
4.40 - Sistemas publicados expuestos al acceso general.

5.1 - Mantenimiento insuficiente o inoportuno de los componentes de hardware.
5.2 - Ausencia de mantenimientos preventivos programados.
5.3 - Debilidades en la seguridad perimetral de la red de datos.
5.4 - Arquitectura de red de datos sin cumplir con los requerimientos de seguridad de la informaci√≥n.
5.5 - Ausencia de control sobre dispositivos m√≥viles.
5.6 - Dependencia de un s√≥lo proveedor de Internet.
5.7 - Ausencia o insuficiencia de ANS (Acuerdos de Niveles de Servicio).
5.8 - Susceptibilidad a las variaciones de temperatura.
5.9 - Susceptibilidad a las variaciones de voltaje.
5.10 - Obsolescencia tecnol√≥gica.
5.11 - Uso inadecuado de los componentes tecnol√≥gicos (equipos de c√≥mputo, dispositivos de red, servidores, etc.).
"""

guia_amenazas = """  
1.1 - Sobrecarga laboral.
1.2 - Ingenier√≠a social.
1.3 - Coacci√≥n.
1.4 - Sabotaje.
1.5 - Errores humanos en el cumplimiento de las labores.
1.6 - Acciones fraudulentas 
1.7 - Entrega indebida de la informaci√≥n.
1.8 - Modificaci√≥n indebida de la informaci√≥n.
1.9 - Situaciones administrativas durante la relaci√≥n laboral (incapacidades, vacaciones, muerte, licencias).

2.1 - Contaminaci√≥n, Polvo, Corrosi√≥n.
2.2 - Niveles de temperatura o humedad por fuera de los rangos aceptables.
2.3 - Fallas de electricidad.
2.4 - Se√±ales de interferencia.
2.5 - Da√±o en instalaciones f√≠sicas.
2.6 - Fallas en el aire acondicionado.
2.7 - Fallas en las UPS.
2.8 - Fallas en la planta el√©ctrica.
2.9 - Desastres naturales.
2.10 - Incendio.
2.11 - Inundaci√≥n.
2.12 - Asonada/Conmoci√≥n civil / Terrorismo/Vandalismo.
2.13 - Desastre accidental.
2.14 - Da√±o en componentes tecnol√≥gicos

3.1 - Ataque inform√°tico para acceder a informaci√≥n reservada o clasificada.
3.2 - Ataque inform√°tico para modificar datos.
3.3 - Ingenier√≠a social.
3.4 - Interceptaci√≥n de informaci√≥n.
3.5 - Cifrado no autorizado de la informaci√≥n por malware o acci√≥n mal intencionada.
3.6 - Corrupci√≥n de los datos por fallas en el software.
3.7 - Suplantaci√≥n de usuarios.
3.8 - Abuso de privilegios.
3.9 - Elevaci√≥n de privilegios.
3.10 - Exposici√≥n de informaci√≥n confidencial y de uso interno por errores de configuraci√≥n.
3.11 - Malware / software malicioso.
3.12 - Denegaci√≥n de servicios.
3.13 - Alteraci√≥n de la informaci√≥n
3.14 - Divulgaci√≥n de la informaci√≥n
3.15 - Uso indebido de la informaci√≥n
3.16 - Uso no autorizado de la informaci√≥n

4.1 - Fallas en los componentes de hardware. 
4.2 - Falla de medios de respaldo y recuperaci√≥n.
4.3 - Fallas en el aire acondicionado.
4.4 - Uso de equipos no autorizados como pi√±as, videoc√°maras, y grabadoras entre otros.
4.5 - Hurto de equipos, medios magn√©ticos o documentos.
4.6 - Fallas en el suministro de energ√≠a el√©ctrica
4.7 - Acceso a informaci√≥n confidencial y de uso interno desde componentes tecnol√≥gicos reciclados o desechados.
"""

# Conjuntos v√°lidos y patrones
ID_VULN_VALIDOS = set(re.findall(r'(\d+\.\d+)\s*-\s', guia_vuln))
ID_AMENAZA_VALIDOS = set(re.findall(r'(\d+\.\d+)\s*-\s', guia_amenazas))
CODE_RE = re.compile(r'^\d+\.\d+$')

# ---------------------------
# Prompt (CODIGO lo genera backend y no se inventan fechas)
# ---------------------------
persona = f"""
Eres un asistente experto en seguridad inform√°tica. Convierte el reporte en UNA SOLA L√çNEA con exactamente 21 valores separados por | (pipe). Sin encabezados, sin markdown, sin explicaciones, sin saltos de l√≠nea. Exactamente 20 pipes.

Reglas:
- Usa el ORDEN EXACTO de las 21 columnas de abajo.
- Si un campo llevar√≠a |, reempl√°zalo por /.
- Si no puedes deducir un valor, d√©jalo vac√≠o‚Ä¶ EXCEPTO los campos 18 (Vulnerabilidad) y 20 (ID Amenaza), que son OBLIGATORIOS.
- Zona horaria: America/La_Paz.
- NO inventes fechas: si el reporte no incluye una fecha expl√≠cita con d√≠a/mes/a√±o (p. ej., "2025-08-10", "10/08/2025" o "10 de agosto de 2025"), deja vac√≠os los campos de fecha. Si solo hay horas, no pongas fecha.

Columnas y formato:
1. CODIGO ‚Üí (dejar vac√≠o; lo genera el sistema).
2. Fecha y Hora de Apertura ‚Üí YYYY-MM-DD HH:MM, solo si se menciona (con d√≠a/mes/a√±o expl√≠citos).
3. Modo Reporte ‚Üí valores v√°lidos (Correo, Jira, Tel√©fono, Monitoreo, ‚Ä¶).
4. Evento/ Incidente ‚Üí Evento | Incidente.
5. Descripci√≥n Evento/ Incidente ‚Üí resumen claro y profesional.
6. Sistema ‚Üí (VPN, Correo, Active Directory, ‚Ä¶).
7. Area
8. Ubicaci√≥n
9. Impacto ‚Üí Alto | Medio | Bajo.
10. Clasificaci√≥n ‚Üí usar solo valores v√°lidos.
11. Acci√≥n Inmediata
12. Soluci√≥n
13. Area de GTIC - Coordinando ‚Üí (Redes, Seguridad Inform√°tica, Soporte T√©cnico, Sistemas, ‚Ä¶).
14. Encargado SI ‚Üí solo si se menciona; no inventes nombres.
15. Fecha y Hora de Cierre ‚Üí YYYY-MM-DD HH:MM, solo si se menciona (con d√≠a/mes/a√±o expl√≠citos).
16. Tiempo Soluci√≥n ‚Üí ‚ÄúX horas Y minutos‚Äù si puedes calcular (Cierre ‚àí Apertura); si no, vac√≠o.
17. Estado ‚Üí Cerrado | En investigaci√≥n.
18. Vulnerabilidad ‚Üí SOLO un c√≥digo con formato N.N tomado de la ‚ÄúGuia Vuln‚Äù.
19. Causa ‚Üí vac√≠o.
20. ID Amenaza ‚Üí SOLO un c√≥digo con formato N.N tomado de la ‚ÄúGuia Amenazas‚Äù.
21. Amenaza ‚Üí vac√≠o.

Gu√≠a de Vulnerabilidades:
{guia_vuln}

Gu√≠a de Amenazas:
{guia_amenazas}

[REPORTE DE ENTRADA]:
"""

# ---------------------------
# Utilidades de saneamiento / validaci√≥n
# ---------------------------
def sanitize_text(s: str) -> str:
    s = s.strip()
    s = re.sub(r"^```.*?\n", "", s, flags=re.DOTALL)
    s = re.sub(r"```$", "", s)
    s = s.replace("```", "")
    s = s.replace("\n", " ").replace("\r", " ")
    s = s.replace("‚Äú", '"').replace("‚Äù", '"').replace("‚Äô", "'")
    m = re.search(r"[^|\n]*\|[^|\n]*\|", s)
    if m:
        s = s[m.start():]
    return s.strip().strip('"').strip()

def normalize_21_fields(raw: str) -> Tuple[List[str], List[str]]:
    avisos = []
    parts = [p.strip() for p in raw.split("|")]
    original_count = len(parts)
    if original_count > 21:
        keep_tail = 21 - 5  # 16 √∫ltimas columnas (6..21)
        desc = " | ".join(parts[4: original_count - keep_tail])
        parts = parts[:4] + [desc] + parts[original_count - keep_tail:]
        avisos.append(f"Se detectaron {original_count} campos; se fusion√≥ el excedente en 'Descripci√≥n'.")
    if len(parts) < 21:
        faltan = 21 - len(parts)
        avisos.append(f"Se detectaron {len(parts)} campos; se completaron {faltan} vac√≠os.")
        parts += [""] * faltan
    parts = [p.strip() for p in parts]
    return parts, avisos

def valida_id(code: str, validos: set) -> str:
    code = code.strip()
    if re.fullmatch(r"\d+\.\d+", code) and code in validos:
        return code
    return ""

def parse_dt(s: str):
    s = s.strip()
    try:
        return datetime.strptime(s, "%Y-%m-%d %H:%M").replace(tzinfo=TZ)
    except Exception:
        return None

def calcula_tiempo_solucion(apertura: str, cierre: str) -> str:
    dt_a = parse_dt(apertura) if apertura else None
    dt_c = parse_dt(cierre) if cierre else None
    if dt_a and dt_c and dt_c >= dt_a:
        delta = dt_c - dt_a
        horas = delta.seconds // 3600 + delta.days * 24
        minutos = (delta.seconds % 3600) // 60
        return f"{horas} horas {minutos} minutos"
    return ""

# ---------------------------
# No inventar fechas: detecci√≥n de fecha expl√≠cita y c√°lculo por horas
# ---------------------------
MESES_ES = r"enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|setiembre|octubre|noviembre|diciembre"

def hay_fecha_explicita(texto: str) -> bool:
    t = texto.lower()
    if re.search(r"\b20\d{2}-\d{1,2}-\d{1,2}\b", t):  # 2025-08-10
        return True
    if re.search(r"\b\d{1,2}[/-]\d{1,2}[/-](?:20)?\d{2}\b", t):  # 10/08/2025 o 10-08-25
        return True
    if re.search(rf"\b\d{{1,2}}\s+de\s+(?:{MESES_ES})(?:\s+de\s+\d{{4}})?\b", t):  # 10 de agosto (de 2025)
        return True
    return False

def extraer_horas(texto: str):
    hhmm = re.findall(r"\b([01]?\d|2[0-3]):([0-5]\d)\b", texto)
    return [f"{int(h):02d}:{int(m):02d}" for h, m in hhmm]

def calcula_tiempo_desde_texto(texto: str) -> str:
    horas = extraer_horas(texto)
    if len(horas) < 2:
        return ""
    h_ini, h_fin = horas[0], horas[-1]
    today = datetime.now(TZ).date()
    dt_a = datetime.strptime(f"{today} {h_ini}", "%Y-%m-%d %H:%M").replace(tzinfo=TZ)
    dt_c = datetime.strptime(f"{today} {h_fin}", "%Y-%m-%d %H:%M").replace(tzinfo=TZ)
    if dt_c < dt_a:  # pas√≥ medianoche
        dt_c = dt_c + timedelta(days=1)
    delta = dt_c - dt_a
    horas = delta.seconds // 3600 + delta.days * 24
    minutos = (delta.seconds % 3600) // 60
    return f"{horas} horas {minutos} minutos"

# ---------------------------
# Reubicador de c√≥digos mal colocados (Causa/Amenaza)
# ---------------------------
def reubicar_codigos_mal_colocados(fila: List[str]) -> list[str]:
    movimientos = []
    # Si Causa (19, index 18) trae c√≥digo, reubicar
    if fila[18].strip() and CODE_RE.fullmatch(fila[18].strip()):
        code = fila[18].strip()
        if code in ID_AMENAZA_VALIDOS and not fila[19].strip():
            fila[19] = code
            movimientos.append("ID Amenaza <- Causa")
        elif code in ID_VULN_VALIDOS and not fila[17].strip():
            fila[17] = code
            movimientos.append("Vulnerabilidad <- Causa")
        fila[18] = ""
    # Si Amenaza (21, index 20) trae c√≥digo, reubicar
    if fila[20].strip() and CODE_RE.fullmatch(fila[20].strip()):
        code = fila[20].strip()
        if code in ID_AMENAZA_VALIDOS and not fila[19].strip():
            fila[19] = code
            movimientos.append("ID Amenaza <- Amenaza")
        elif code in ID_VULN_VALIDOS and not fila[17].strip():
            fila[17] = code
            movimientos.append("Vulnerabilidad <- Amenaza")
        fila[20] = ""
    return movimientos

# ---------------------------
# Reglas determin√≠sticas de respaldo
# ---------------------------
_PAT_AMENAZA = [
    (r"(phish|smish|vish|ingenier[√≠i]a social|suplantaci[o√≥]n)", "3.3"),
    (r"(ransom|cifrad[oa].*archivo|encrypt(ed)? files?)", "3.5"),
    (r"(malware|virus|troyano|payload|backdoor)", "3.11"),
    (r"(denegaci[o√≥]n|ddos)", "3.12"),
    (r"(intercept|sniff|escucha)", "3.4"),
    (r"(acceso no autorizado|elevaci[o√≥]n de privilegios)", "3.9"),
    (r"(corte de energ[i√≠]a|apag[o√≥]n|fallas? el[e√©]ctric[ao])", "4.6"),
    (r"(temperatura|humedad)", "2.2"),
    (r"(incendio)", "2.10"),
    (r"(inundaci[o√≥]n)", "2.11"),
    (r"(ca[i√≠]da|no disponible|indisponibilidad|servicio.*no responde|reinici(ar|o) (servicio|servidor))", "4.1"),
]
_PAT_VULN = [
    (r"(contrase√±|password|clave).*(d[e√©]bil|compartid|reutiliz)", "4.1"),
    (r"(sin mfa|sin 2fa|mfa deshabilitad|autenticaci[o√≥]n.*d[e√©]bil)", "4.3"),
    (r"(permisos|roles|segregaci[o√≥]n|separaci[o√≥]n de deberes)", "4.2"),
    (r"(software|sistema).*(desactualiz|sin parche|obsolet)", "4.10"),
    (r"(parche|actualizaci[o√≥]n) (pendiente|faltante)", "4.11"),
    (r"(antivirus|antimalware|edr|xdr) (ausente|desactivado|no instalado)", "4.29"),
    (r"(alta disponibilidad|cluster|ha|redundan|punto [√∫u]nico de falla)", "4.39"),
    (r"(sin monitoreo|sin alertas|no hay alertas|no se monitorea)", "4.19"),
    (r"(capacidad|recurso(s)? de almacenamiento|cpu|memoria) (insuficiente|saturad)", "4.21"),
    (r"(respaldo|backup|copia(s)? de seguridad) (ausente|no configurad|no se realiza)", "4.30"),
]

def infer_amenaza(texto: str) -> str:
    t = texto.lower()
    for pat, code in _PAT_AMENAZA:
        if re.search(pat, t):
            return code
    if re.search(r"(ca[i√≠]da|no disponible|indisponibilidad|reinici(ar|o))", t):
        return "4.1"
    return ""

def infer_vulnerabilidad(texto: str) -> str:
    t = texto.lower()
    for pat, code in _PAT_VULN:
        if re.search(pat, t):
            return code
    if re.search(r"(ca[i√≠]da|no disponible|indisponibilidad)", t):
        return "4.39"
    return ""

# ---------------------------
# Generador de CODIGO: INC-<d√≠a>-<mes>-<NNN>
# ---------------------------
def generar_codigo_inc(ws, fecha_apertura: str | None) -> str:
    dia, mes = None, None
    if fecha_apertura:
        try:
            dt = datetime.strptime(fecha_apertura.strip(), "%Y-%m-%d %H:%M").replace(tzinfo=TZ)
            dia, mes = dt.day, dt.month
        except Exception:
            pass
    if dia is None:
        now = datetime.now(TZ)
        dia, mes = now.day, now.month

    codigos = ws.col_values(1)  # CODIGO
    patron = re.compile(rf"^INC-{dia}-{mes}-(\d{{3}})$")
    max_seq = 0
    for c in codigos:
        if not c:
            continue
        m = patron.match(c.strip())
        if m:
            n = int(m.group(1))
            if n > max_seq:
                max_seq = n

    seq = max_seq + 1
    candidato = f"INC-{dia}-{mes}-{seq:03d}"
    existentes = set(x.strip() for x in codigos if x)
    while candidato in existentes:
        seq += 1
        candidato = f"INC-{dia}-{mes}-{seq:03d}"
    return candidato

# ---------------------------
# UI
# ---------------------------
user_question = st.text_area(
    "Describe el incidente:",
    height=200,
    placeholder="A las 8:00am el √°rea de Contabilidad reporta por Correo que no puede acceder al sistema de Correo corporativo. Como acci√≥n inmediata, el usuario reinici√≥ el equipo y Mesa de Ayuda valid√≥ conectividad sin resultados. Seguridad Inform√°tica coordin√≥ la atenci√≥n y reinici√≥ el servicio de Correo en el servidor, verificando autenticaci√≥n y entrega de mensajes. A las 10:15am el servicio qued√≥ restablecido y se cerr√≥ el incidente.",
    help="Incluye: Fecha/hora de apertura, Sistema, √Årea, Acci√≥n inmediata, Soluci√≥n, √Årea GTIC que coordin√≥ y Fecha/hora de cierre (YYYY-MM-DD HH:MM)."
)



if st.button("Reportar", use_container_width=True):
    if not user_question.strip():
        st.warning("Por favor, describe el incidente antes de continuar.")
        st.stop()

    prompt = persona + user_question.strip()

    with st.spinner("Generando y validando la fila..."):
        last_err, response_text = None, None
        for _ in range(2):
            try:
                response = model.generate_content([prompt], generation_config={"temperature": 0.2})
                response_text = response.text if hasattr(response, "text") else str(response)
                break
            except Exception as e:
                last_err = e
        if response_text is None:
            st.error(f"Error al generar contenido: {last_err}")
            st.stop()

        cleaned = sanitize_text(response_text)
        fila, avisos = normalize_21_fields(cleaned)

        # Si el texto NO trae fecha expl√≠cita, forzar vac√≠os en 2 y 15
        if not hay_fecha_explicita(user_question):
            fila[1] = ""   # Fecha y Hora de Apertura
            fila[14] = ""  # Fecha y Hora de Cierre

        # Reubicar si Gemini meti√≥ c√≥digos en Causa/Amenaza
        movimientos = reubicar_codigos_mal_colocados(fila)

        # Validaciones de c√≥digos
        fila[17] = valida_id(fila[17], ID_VULN_VALIDOS)     # Vulnerabilidad
        fila[19] = valida_id(fila[19], ID_AMENAZA_VALIDOS)  # ID Amenaza

        # Fallback determin√≠stico si faltan
        texto_ctx = " ".join([user_question, fila[4], fila[11], fila[12], fila[6], fila[10]])
        if not fila[19]:
            fila[19] = infer_amenaza(texto_ctx)
            fila[19] = valida_id(fila[19], ID_AMENAZA_VALIDOS)
        if not fila[17]:
            fila[17] = infer_vulnerabilidad(texto_ctx)
            fila[17] = valida_id(fila[17], ID_VULN_VALIDOS)

        # Enfoque estricto: Causa (19) y Amenaza (21) SIEMPRE vac√≠as
        fila[18] = ""
        fila[20] = ""

        if not fila[17] or not fila[19]:
            st.error("Faltan c√≥digos en Vulnerabilidad (18) o ID Amenaza (20). Ajusta el reporte o completa manualmente.")
            st.stop()

        # Tiempo de soluci√≥n: primero usando fechas, si no existen, calcular por horas del texto
        if not fila[15].strip():
            fila[15] = calcula_tiempo_solucion(fila[1], fila[14])
        if not fila[15].strip():
            fila[15] = calcula_tiempo_desde_texto(user_question)

        # Estado por defecto si falta
        if not fila[16].strip():
            fila[16] = "Cerrado" if fila[14].strip() else "En investigaci√≥n"

        # Generar CODIGO backend (col 1) seg√∫n Fecha Apertura (col 2) o fecha actual
        codigo = generar_codigo_inc(ws, fila[1] if fila[1].strip() else None)
        fila[0] = codigo

        # Confirmaci√≥n final de 21 campos
        if len(fila) != 21:
            st.error(f"La salida qued√≥ con {len(fila)} columnas tras saneo (esperado: 21).")
            st.code(cleaned, language="text")
            st.stop()

        # Vista previa
        columnas = [
            "CODIGO","Fecha y Hora de Apertura","Modo Reporte","Evento/ Incidente","Descripci√≥n Evento/ Incidente",
            "Sistema","Area","Ubicaci√≥n","Impacto","Clasificaci√≥n","Acci√≥n Inmediata","Soluci√≥n",
            "Area de GTIC - Coordinando","Encargado SI","Fecha y Hora de Cierre","Tiempo Soluci√≥n",
            "Estado","Vulnerabilidad","Causa","ID Amenaza","Amenaza"
        ]
        df_prev = pd.DataFrame([fila], columns=columnas)
        st.subheader("Vista previa")
        st.dataframe(df_prev, use_container_width=True)

        # Info de correcciones autom√°ticas (si las hubo)
        avisos_extra = []
        if movimientos:
            avisos_extra.append("Se reubicaron c√≥digos: " + ", ".join(movimientos))
        if avisos or avisos_extra:
            st.info(" | ".join(avisos + avisos_extra))

        # Guardado
        try:
            ws.append_row(fila, value_input_option="RAW")
            st.success("Incidente registrado correctamente en Google Sheets.")
        except Exception as e:
            st.error(f"No se pudo escribir en la hoja: {e}")

        # Descarga de auditor√≠a
        csv_line = "|".join(fila)
        st.download_button(
            "Descargar fila (pipe-separated)",
            data=csv_line,
            file_name=f"{fila[0] or 'INC'}_fila.txt",
            mime="text/plain"
        )




